Tue Dec 18 17:01:55 EST 2007

happy holidays

--

Wow, it's been a little while since I posted anything.  I've been pretty busy with school and work, but now that the semester is basically finished I though I should write something to show that I am not dead :).

I took a distributed operating systems and a theory of computation class.  The OS class was pretty interesting, but I wish we spent more time on distributed algorithms.  A lot of time was wasted on a project.  The goal of the project wasn't silly, it was the framework in which we had to implement the code.  It came down to simulating a wireless sensor network using this packages called "TinyOS".  The latest version might be a tad more bearable, but we were stuck using an old version.  I am certain that we could have created our own simulators from scratch in a much shorter time frame, and we would have probably learned more about the actual problem itself.  Overall the class was good, since I did learn a lot of cool new algoriths.

The second class on the theory of computation provided a nice refresher course on finite automata.  Unlike the theory class I had when pursuing my MS, we got to spend a significant amount of time on context-free languages, push-down automata, and turing machines.  We also spent a decent amount of time on complexity classes, such as P and NP.  I learned a lot, and I am hoping the depart offers some graduate level classes on the subject.

In Spring, I am taking a graph theory class and a graduate level programming languages class.  In the PL class, we'll most likely be writing compilers and such - which is a pretty cool thing to do.  Also next semester, I am going to be taking the program's qualifier; and this means that if I pass I'll have to get serious about picking and advisor, committee, and developing a plan of study.  I am looking forward to focusing a bit, but the test will not be easy.

I am going to take advange of the break to work on a couple of things my mind's been drifting towards.  One is a problem suggested to me by one of the CS professors.  It is interesting, and straightforward enough, to keep my attention.  I also would like spend some time working on the DFA->RE transformaion in FLaT.  I've started to implement a version of an FA that contains "regular expression" objects as its transition labels, but I have to go a few steps further.  In order to do the DFA->RE transformation, I want to implement state elimination, and this will mean that the RE-objects-as-labels will be interacting using the usualy regular expression operators.

I read a very interesting article today that talked about some efforts scientists are undertaking to create "artificial life."  This means that they are inventing the entire strand of DNA in the lab.  They are using existing DNA to cheat a bit, but it is still an interesting concept.  This got me thinking about how exactly DNA works to encodeall the complex machinery and interactions inside of a life form.

Given the recent hours and days spent contemplating turing machines, the languages (programs) they accept, and their inherent limitations, it made me wonder about a couple of things. For example, is it possible to reverse engineer DNA?  History is wrought with people saying, "that's impossible", but if one really thinks about what it means to reverse engineer, the mind should shut down by the sheer size of the problem.  In fact, this seems akin to inquiring about the properties or function of a turing machine - which is well know to be "undecidable".  We can say that DNA doesn't just encode a single machine.  It encodes many machines, and all of these machines interact in conjunction with one another.  Many unrelated machines and systems share the same parts, and modify a seemingly insignificant part of one machines adversely affects many others. This to me seems infintely more complex than figuring anything about our silly models of computation. 

Given that DNA encodes a complex network of interrelated systems, how does one /really/ engineer an artificial life?  It just doesn't seem possible to start from scratch and design an organism from scratch.  I think this is beyond the capabilities of humans.  It may be possible to program little autonomous things much like computer scientists can create interesting cellular automata, but at the end of the day creating an organism from scratch is such an enormous feat that it seems impossible. Of course, the scientists working in this area are using DNA from an existing organism to start with.  This is not unlike learning a new language looking at examples, but DNA's encoding is so much more complex than simple human programming languages.  DNA is so densly packed with information, that the only way to see what is in it is to "let it run".  But, it is not simply a set of instructions contained in the DNA.  It is instructions on how to construct the machines and systems that THEN interact at various stages of development and life to make the organism what it is.  

To me, a practical computer analogy would liken DNA to a heirarchical and maximally compressed TAR file that contains a set of programs. Heirarchically compressed in that various levels of compression reveal different programs that are then used to either uncompress other parts, or generate additional code and instructions that are to be executed by other machines or go on to create yet more code.  It is a chain reaction of instructions creating machines that create more instructions and machines.  The more machines and systems that are set in motion, the more that can be done as these machines interact and grow.  The sheer complexity of it all is mind blowing, and I challenge anyone to design such a system from scratch. It is in my mind infinitely more complex that trying to model a chemical reaction or something like a nuclear explosion - and human technology is barely at the stage where it can do either of these very well.

It is as if we've been given some alien technology to reverse engineer - but who's to say that humans are even capable?  Who's to say that /anyone/ or being (save your Supreme Deity of choice) has the capacity to understand the interactions taking place? A proposed experiment to a human's capability would be to create such a compressed tarfile as the one described above - except one that would obviously have to be much simpler since a human is designing it. The challenge would be for the investigator(s) to determine accurately what is happening. In otherwords, one would have to construct a model of this unknown system.  Of course one would be given a time limit, but the idea would be to see how good humans are at figuring out systems. In summary, the experiment is to start with a know system, allow people to observe how it works in a way similar to how people observe the development and life functions of simple organisms, have the subjects create a model of what they think is going on, then compare it to the actual system. I believe the results will be shockingly bad, but I guess we'll have to see.

