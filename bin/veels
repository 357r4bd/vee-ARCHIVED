#!/bin/sh

DIR=.vee

SORT_NEW_FIRST='sort -t. -nr'
SORT_OLD_FIRST='sort -t. -n'
SORT="${SORT_NEW_FIRST}"
STRIPEXT=0
USELS=0
LSOPTS='-lat'

 die_error()
{ 
  echo $1
  exit 1
}

 die_cleanly()
{ 
  exit 0
}

 usage() 
{
	man veels
}

while getopts 'd:hlL:rx' option; do
    case $option in
    d) if [ -d "${OPTARG}" ]; then
         cd "${OPTARG}"
       else
         echo "${OPTARG}" is not a directory!
         die_cleanly
       fi
       ;;
    l) USELS=1 #use ls with default opts
       ;;
    L) USELS=1 #use ls with custom opts
       LSOPTS="${OPTARG}"
       ;;
    r) SORT=$SORT_OLD_FIRST  # list in reverse post order
       ;;
    x) STRIPEXT=1 #strip .raw from output
       ;;
    h) usage # some help page
       die_cleanly
       ;;
    esac
done

 read_config()
{ if [ -e ./.veerc ]; then
    . ./.veerc
  fi
} 

 get_sorted()
{
    ls -1 "${DIR}"/*.raw | $SORT
}

 get_title()
{
	TITLE=$(head -n 3 "$1" | tail -n 1)
    echo "$TITLE"
}

 get_date()
{
	DATE=$(head -n 1 "$1")
    echo "$DATE"
}

 _ls ()
{
   ls "${LSOPTS}" "$1"
}

#-- main program body

#-- read config, $(pwd)/.veerc (happens after "-d" so it's consistent
#--      with how bin/vee does it)
read_config   

for f in $(get_sorted); 
do
    # title is the 3rd line
	TITLE=$(get_title "$f")

    # full date string (not epoch) is the first line
	DATE=$(get_date "$f")

    if [ 1 -eq $USELS ]; then
        _ls "$f"
    else
	    if [ 1 -eq $STRIPEXT ]; then
                echo "${f%\.*}"
	    else 
		echo "$f"
	    fi
    fi
done
